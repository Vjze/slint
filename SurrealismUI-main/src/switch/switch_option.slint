/**
* ============================================
* @author:syf20020816@outlook.com
* @since:20231104
* @version:0.1.8
* @type:interface
* @description:
* # SURSwitchOption
* SURSwitchOption can show option info
* ## properties
* - in-out property <bool> active : active option;
* - in property <string> left : left option;
* - in property <string> right : right option;
* - in property <length> font-size : font size , it will effect switch component height;
* - in property <brush> switch-background-color : switch circle background color;
* - in property <brush> switch-border-color : switch circle border color
* - in property <color> switch-drop-shadow-color : switch circle drop shadow color
* ## callbacks
* - callback clicked(bool) : run if you click the switch
* ============================================
*/
import { SURCard } from "../card/index.slint";
import { ROOT-STYLES,Themes } from "../../themes/index.slint";
import { SURText } from "../text/index.slint";
export component SwitchOption inherits SURCard { 
  card-height: font-size / 2;
  card-width: left-text.width + right-text.width;
  border: None;
  border-radius: root.height / 2;
  padding-size: Small;
  clip: true;
  in-out property <bool> active :false;
  in property <string> left : "left";
  in property <string> right : "right";
  in property <length> font-size : 12px;
  in property <brush> switch-background-color <=> switch-circle.background;
  in property <brush> switch-border-color<=>switch-circle.border-color;
  in property <color> switch-drop-shadow-color<=> switch-circle.drop-shadow-color;
  switch-circle:=SURCard{
    x: root.padding-left / 4;
    theme: root.theme;
    card-height: font-size / 2 + ROOT-STYLES.sur-padding.normal.top-bottom;
    width: left-text.width + root.padding-left / 2;
    // border: None;
    border-radius: self.height / 2;
    padding-size: None;
    
    states [
      light when self.theme == Themes.Light: {
        switch-circle.background : ROOT-STYLES.sur-theme-colors.light.deepest;
        switch-circle.border-color : ROOT-STYLES.sur-theme-colors.light.deepest;
        switch-circle.drop-shadow-color : ROOT-STYLES.sur-theme-colors.light.weakest;
        
      }
      primary when self.theme == Themes.Primary: {
        switch-circle.background : ROOT-STYLES.sur-theme-colors.primary.deepest;
        switch-circle.drop-shadow-color: ROOT-STYLES.sur-theme-colors.primary.weakest;
        switch-circle.border-color : ROOT-STYLES.sur-theme-colors.primary.deepest;
      }
      success when self.theme == Themes.Success: {
        switch-circle.background : ROOT-STYLES.sur-theme-colors.success.deepest;
        switch-circle.drop-shadow-color: ROOT-STYLES.sur-theme-colors.success.weakest;
        switch-circle.border-color : ROOT-STYLES.sur-theme-colors.success.deepest;
      }
      info when self.theme == Themes.Info: {
        switch-circle.background : ROOT-STYLES.sur-theme-colors.info.deepest;
        switch-circle.drop-shadow-color: ROOT-STYLES.sur-theme-colors.info.weakest;
        switch-circle.border-color : ROOT-STYLES.sur-theme-colors.info.deepest;
      }
      warning when self.theme == Themes.Warning: {
        switch-circle.background : ROOT-STYLES.sur-theme-colors.warning.deepest;
        switch-circle.drop-shadow-color: ROOT-STYLES.sur-theme-colors.warning.weakest;
        switch-circle.border-color : ROOT-STYLES.sur-theme-colors.warning.deepest;
      }
      error when self.theme == Themes.Error: {
        switch-circle.background : ROOT-STYLES.sur-theme-colors.error.deepest;
        switch-circle.drop-shadow-color: ROOT-STYLES.sur-theme-colors.error.weakest;
        switch-circle.border-color : ROOT-STYLES.sur-theme-colors.error.deepest;
      }
      dark when self.theme == Themes.Dark: {
        switch-circle.background : ROOT-STYLES.sur-theme-colors.dark.deeper;
        switch-circle.drop-shadow-color: ROOT-STYLES.sur-theme-colors.dark.weakest;
        switch-circle.border-color : ROOT-STYLES.sur-theme-colors.dark.deeper;
      }
    ]
    TouchArea {
      mouse-cursor: pointer;
      
      clicked => {
        root.active = !root.active;
        root.clicked(root.active);
        if(root.active){
          parent.width = right-text.width + root.padding-right / 2;
          parent.x =  3 * root.padding-left / 4 + parent.width ;
          
        }else{
          parent.width = left-text.width + root.padding-left / 2;
          parent.x = root.padding-left / 4;
          
        }
      }
    }
  }
  
  callback clicked(bool);
  left-text:=SURText {
    x: root.padding-left / 2;
    font-size: root.font-size;
    text: root.left;
    theme: root.theme;
  }
  right-text:=SURText{
    x: root.width - right-text.width - root.padding-right / 2;
    font-size: root.font-size;
    text: root.right;
    theme: root.theme;
  }
  
} 