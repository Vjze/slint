/**
* ============================================
* @author:syf20020816@outlook.com
* @since:20231105
* @version:0.2.1
* @type:interface
* @description:
* # SURTree
* SURTree can be used to display directory structure, forming a parent-child relationship, and can be easily displayed
* ## properties
* - in-out property <TreeData> tree-data : the data to be displayed
* ## callbacks
* - callback clicked(int,string,string) : run after you click an item
* ============================================
*/

import { SURCard } from "../card/index.slint";
import { IconSources , ROOT-STYLES} from "../../themes/index.slint";
import { SURIcon } from "../icon/index.slint";
import { SURText } from "../text/index.slint";
import { ScrollView } from "std-widgets.slint";

export struct TreeChildren {
  icon:image,
  label:string,
  extra:string,  
}

export struct TreeData {
  icon:image,
  label:string,
  extra:string,  
  children:[TreeChildren]
}

component TreeItem inherits SURCard{
  card-height: 20px;
  theme: Primary;
  border: None;
  drop-shadow-blur: 0;
  drop-shadow-offset-x: 0;
  drop-shadow-offset-y: 0;
  in property <int> item-index;
  in property <image> item-icon;
  in property <string> item-name;
  in property <string> item-extra;
  callback clicked(int,string,string);
  TouchArea {
    mouse-cursor: pointer;
    clicked => {
      root.clicked(item-index,item-name,item-extra);
     
    }
  }
  HorizontalLayout {
    alignment: space-between;
    HorizontalLayout {
      Rectangle {
        i-icon:=SURIcon { 
          height: 20px;
          width: 20px;
          theme: root.theme;
          source: root.item-icon;
        }
      }
      i-name:=SURText { 
        theme: root.theme;
        font-size: 14px;
        text: item-name;
      }
    }
    HorizontalLayout {
      alignment: end;
      i-extra:=SURText {
        theme: root.theme;
        font-size: 14px;
        text: root.item-extra;
      } 
    }
  }
}


export component Tree inherits SURCard{
  height: 100%;
  width: 100%;
  clip: true;
  in-out property <TreeData> tree-data : {
    icon : IconSources.icons.Folder,
    label: "parent_folder",
    extra:"",
    children:[
      {
        icon:IconSources.icons.FileCode,
        label:"slint.slint",
        extra:"12KB", 
      },
      {
        icon:IconSources.icons.FileCode,
        label:"surrealism.slint",
        extra:"126KB", 
      }
    ]
  };
  callback clicked(int,string,string);
  view:=VerticalLayout {
    parent-root:= TreeItem{
      width: 100%;
      theme: root.theme;
      item-index: -1;
      item-icon: tree-data.icon;
      item-name: tree-data.label;
      item-extra: tree-data.extra;
      clicked(i,n,e) => {
        root.clicked(i,n,e);
      }
    }
    children-view:= ScrollView { 
      viewport-height: tree-data.children.length * parent-root.height;
      VerticalLayout {
        padding-left: root.padding-left / 2;
        padding-right: root.padding-right / 2;
        for item[index] in tree-data.children: TreeItem{
          width: 100%;
          theme: root.theme;
          item-index: index;
          item-icon: item.icon;
          item-name: item.label;
          item-extra: item.extra;
          clicked(i,n,e) => {
            root.clicked(i,n,e);
          }
        }
      }
    }
  }
}